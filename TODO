BUGS/IMMEDIATE
 nothing

SHORT TERM DEV
 nothing

MEDIUM TERM DEV
 - Use the same technique as rm -P (BSD) instead of just unlink.

 - Document the security measures.

 - Automatically kill the editor if it lingers. Better lose one passwords than
   leak all of them.

 - Store/backup automatically to S3? or maybe storage works like wal logs in pg
   and the user can define put and get commands?

 - Other types of encryption (aes-256 via openssl?)

 - Don't bother getting HOME or EDITOR unless we need them.

 - An option to default all searches to regexes.

 - Allow to enter syllable sets instead of character sets, e.g.:

     set syllable_set = ac-set-po-tru-ka-ret-1-2-3-4-5-6-7-8-9-0

 - Add cleanup_command and cleanup_timeout configuration parameters.  Would be
   used to configure a clipboard cleanup mechanism if you are running mdp
   in an environment that runs X, OSX, etc.

LONG TERM DEV (MAYBE)
 - Rewrite the process name to avoid other users to know what keywords you are
   searching for. PostgreSQL has some robust code to do that.  This is in no way 
   perfect, just added layers.

 - Add introns/exons style encoding to the password file to fill it with
   garbage transparently and keep the file size fixed. This would avoid a
   potential attacker from guessing if passwords were added or removed. These could
   be special comments ( e.g. #mdp:filler# 123123123123123123 )

 - the first time you run mdp, a default configuration file is created with as
   many defaults as possible:
    * if the user has gpg installed with a valid private key, configure it with gpg
    * if the user doesn't have gpg but has openssl, use aes-256.

 - git and/or mercurial integration with auto push/pull and conflict resolution
   (lines stored separately?).

 - If gpg times out while you're typing your password, it appears clear on
   screen, can we capture the keystrokes in a sub-process? Can we spawn a dummy
   prompt without echo after killing gpg?
